//This file is automatically generated

// sdk-endpoint

import { SDKEndpoint } from '@controller';
export default {
    actions: {
        [SDKEndpoint.getApiAccessStats.method] : {
            summary: 'getApiAccessStats',
            method: 'get',
            url: (payload) => `/actuator/eos/api-access-stats`,
            parameters: [{'name':'getAndRemove','in':'query','description':'getAndRemove','required':false,'type':'boolean'},{'name':'maxSize','in':'query','description':'maxSize','required':false,'type':'integer','default':500,'format':'int32'}],
        },
        [SDKEndpoint.getFeignClientNames.method] : {
            summary: 'getFeignClientNames',
            method: 'get',
            url: (payload) => `/actuator/eos/feign-client-names`,
            parameters: [],
        },
        [SDKEndpoint.getHystrixCommandConfigs.method] : {
            summary: 'getHystrixCommandConfigs',
            method: 'get',
            url: (payload) => `/actuator/eos/hystrix-command-configs`,
            parameters: [],
        },
        [SDKEndpoint.getHystrixCommandKeys.method] : {
            summary: 'getHystrixCommandKeys',
            method: 'get',
            url: (payload) => `/actuator/eos/hystrix-command-keys`,
            parameters: [],
        },
        [SDKEndpoint.getRateLimiting.method] : {
            summary: 'getRateLimiting',
            method: 'get',
            url: (payload) => `/actuator/eos/rate-limiting`,
            parameters: [],
        },
        [SDKEndpoint.getRibbonClientConfigs.method] : {
            summary: 'getRibbonClientConfigs',
            method: 'get',
            url: (payload) => `/actuator/eos/ribbon-client-configs`,
            parameters: [],
        },
        [SDKEndpoint.getRibbonClientNames.method] : {
            summary: 'getRibbonClientNames',
            method: 'get',
            url: (payload) => `/actuator/eos/ribbon-client-names`,
            parameters: [],
        },
        [SDKEndpoint.getSDKConfigs.method] : {
            summary: 'getSDKConfigs',
            method: 'get',
            url: (payload) => `/actuator/eos/sdk-configs`,
            parameters: [],
        },
    },
    // state: {},
    // mutations: {},
    // getters: {}
}
